@import "./mixins/text.pcss";

$inputClientHeight: calc($INPUT_HEIGHT - 2);
$inputPaddingX: calc(($INPUT_HEIGHT - 2 - 16) / 2)px;

.su-input {
  padding: $inputPaddingX 15px;
  line-height: 16px;
  width: 200px;
  color: $TEXT_COLOR_DEFAULT;
  background-color: #fff;
  border: 1px solid $BORDER_COLOR_DEFAULT;
  border-radius: $(INPUT_BORDER_RADIUS)px;
  outline: none;
  font-size: 1rem;
  &:focus {
    text-align: left !important;
    border-color: $COLOR_PRIMARY;
    box-shadow: inset 0 0 1px 1px $SHADOW_COLOR_PRIMARY;
  }
  &[readonly] {
    background-color: $INPUT_COLOR_READONLY;
  }
  &[disabled] {
    color: $TEXT_COLOR_GREY_LIGHT;
    background-color: $INPUT_COLOR_DISABLED;
    box-shadow: none;
  }
  &::-ms-clear {
    display: none;
  }
}

textarea.su-input {
  min-height: 80px;
  resize: none;
}

[input-shape="round"] {
  border-radius: calc($INPUT_HEIGHT / 2)px;
}

.su-input-box {
  position: relative;
  display: inline-block;
  width: 200px;
  
  & > .su-input {
    width: 100%;
    padding-right: calc(5 + $inputClientHeight)px;
  }

  & > .su-input-icon {
    position: absolute;
    top: 1px;
    bottom: 1px;
    right: 8px;
    display: inline-block;
    width: 16px;
    line-height: $(inputClientHeight)px;
    text-align: center;
    color: $TEXT_COLOR_HALF_DARK;

    &:first-child {
      left: 8px;
      right: auto;

      & + input {
        padding-left: $inputIconPaddingSize;
      }
    }
  }

  & > a.su-input-icon:hover {
    color: $COLOR_PRIMARY;
    cursor: pointer;
  }

  &[buttons="2"] {
    & > input {
      padding-right: calc(2 * $inputButtonSize + 5)px;
      & + .icon,
      & + [toggle-type] {
        right: $(inputButtonSize)px;
      }
    }
    & > .icon,
    & > [toggle-type] {
      &:first-child {
        & + .icon,
        & + [toggle-type] {
          left: $(inputButtonSize)px;
          right: auto;
        }
        & ~ input {
          padding-left: calc(2 * $inputButtonSize + 5)px;
          padding-right: 10px;
        }
        & + input {
          padding-left: calc(5 + $inputButtonSize)px;
          padding-right: calc(5 + $inputButtonSize)px;
          & + .icon,
          & + [toggle-type] {
            right: 1px;
          }
        }
      }
    }
  }

  &[readonly] {
    & > .su-input {
      padding: 7px 15px;
    }
    & > .su-input-icon {
      display: none;
    }
  }
}

input[border-none],
.input-box[border-none] > input {
  border: 0;
}

label {
  color: $TEXT_COLOR_GREY;
}

[toggle-type] > label {
  cursor: pointer;
}

.form-field {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  min-height: 40px;
  overflow: visible;

  &.inline {
    display: inline-flex;
  }

  & > label {
    position: relative;
    flex: none;
    display: inline-block;
    line-height: 32px;
    font-size: 0.857rem;
    padding-right: 12px;
    width: $(FORM_LABEL_WIDTH)px;
    @mixin text-ellipsis;
  }

  & > input,
  & > .input-box,
  & > .field-value {
    flex: auto;
    width: 10px;
  }

  & > .field-value {
    &:not(input) {
      padding: 0 10px;
      line-height: 32px;
    }
    &:not([multi-lines]) {
      @mixin text-ellipsis;
    }
  }

  & > .field-postfix {
    flex: none;
    padding-left: 10px;
    line-height: 32px;
    width: 80px;
    font-size: 0.857rem;
    color: $TEXT_COLOR_GREY_LIGHT;
    @mixin text-ellipsis;
  }

  &[important] > label:after {
    position: absolute;
    right: 0;
    display: inline-block;
    text-align: center;
    width: 12px;
    color: $COLOR_DANGER;
    content: "*";
  }

  &[invalid] {
    & > label {
      color: $COLOR_DANGER;
    }
    & input,
    & textarea {
      border-color: $COLOR_DANGER;
      &:focus {
        box-shadow: inset 0 0 1px 1px $SHADOW_COLOR_DANGER;
      }
    }
  }

  &[toggle-type]:after {
    flex: none;
    align-items: center;
    line-height: 32px;
    width: 32px;
    text-align: center;
    color: $TEXT_COLOR_GREY_LIGHT;
  }

  &:not([readonly]) {
    & > input[border-none],
    & > .input-box[border-none] > input {
      &:not(:focus) {
        background: rgba(0, 0, 0, .03);
      }
    }
  }
}

.form {
  padding: 0 $(UNIT_SIZE)px;

  &[label-align="right"] label {
    text-align: right;
  }
  &[value-align="right"] {
    input,
    .field-value {
      text-align: right;
    }
  }
  &[grid-line] {
    & > :not(:first-child) {
      border-top: 1px solid rgba(0, 0, 0, .05);
    }
  }
}